penssl help

Standard commands
asn1parse         ca                ciphers           cms               
crl               crl2pkcs7         dgst              dhparam           
dsa               dsaparam          ec                ecparam           
enc               engine            errstr            exit              
gendsa            genpkey           genrsa            help              
list              nseq              ocsp              passwd            
pkcs12            pkcs7             pkcs8             pkey              
pkeyparam         pkeyutl           prime             rand              
rehash            req               rsa               rsautl            
s_client          s_server          s_time            sess_id           
smime             speed             spkac             srp               
ts                verify            version           x509              

Message Digest commands (see the `dgst' command for more details)
blake2b512        blake2s256        gost              md4               
md5               rmd160            sha1              sha224            
sha256            sha384            sha512            

Cipher commands (see the `enc' command for more details)
aes-128-cbc       aes-128-ecb       aes-192-cbc       aes-192-ecb       
aes-256-cbc       aes-256-ecb       base64            bf                
bf-cbc            bf-cfb            bf-ecb            bf-ofb            
camellia-128-cbc  camellia-128-ecb  camellia-192-cbc  camellia-192-ecb  
camellia-256-cbc  camellia-256-ecb  cast              cast-cbc          
cast5-cbc         cast5-cfb         cast5-ecb         cast5-ofb         
des               des-cbc           des-cfb           des-ecb           
des-ede           des-ede-cbc       des-ede-cfb       des-ede-ofb       
des-ede3          des-ede3-cbc      des-ede3-cfb      des-ede3-ofb      
des-ofb           des3              desx              rc2               
rc2-40-cbc        rc2-64-cbc        rc2-cbc           rc2-cfb           
rc2-ecb           rc2-ofb           rc4               rc4-40            
seed              seed-cbc          seed-cfb          seed-ecb          
seed-ofb          

root@kali:~# echo "123456789" > data.txt
root@kali:~# cat data.txt
123456789
root@kali:~# echo "a123456789" > data.txt
root@kali:~# cat2 data.txt
bash: cat2: command not found
root@kali:~# echo "a123456789" > data2.txt
root@kali:~# cat data2.txt
a123456789
root@kali:~# echo "A123456789" > data3.txt
root@kali:~# cat data3.txt
A123456789
root@kali:~# openssl
OpenSSL> sha1 data.txt
SHA1(data.txt)= 02d707e871eb91f4a5dc34b6269d3469b987adbf
OpenSSL> sha1 data2.txt
SHA1(data2.txt)= 02d707e871eb91f4a5dc34b6269d3469b987adbf
OpenSSL> sha1 data3.txt
SHA1(data3.txt)= 589a1c3dd871704c0e506a5b0386cffd932d9ef5

XOR運算[python2]
>>> a=0b01010111011010010110101101101001
>>> k=0b11110011111100111111001111110011
>>> c=bin(a^k)
>>> print c
0b10100100100110101001100010011010
>>> d=bin(a^a^k)
>>> print d
0b11110011111100111111001111110011

>>> a=0b01010111011010010110101101101001
>>> k=0b11110011111100111111001111110011
>>> c=bin(a^k)
>>> print c
0b10100100100110101001100010011010
>>> a2=bin(a^a^k)
>>> print a2
0b11110011111100111111001111110011
>>> k2=bin(k^a^k)
>>> print k2
0b1010111011010010110101101101001


echo "1" > infile
root@kali:~# cat infile
1
root@kali:~# openssl des -in infile -out infile.des
enter des-cbc encryption password:
Verifying - enter des-cbc encryption password:
root@kali:~# cat infile
1
root@kali:~# cat infile.des
Salted__��""�
�ރ�" �aroot@kali:~# openssl des -d -in infile.des -out sol
enter des-cbc decryption password:
root@kali:~# cat sol
1
root@kali:~# 


 echo 'HappyHackingDay' > test.txt
root@kali:~# openssl dgst -md5 -c test.txt
MD5(test.txt)= 79:50:86:fd:74:d8:48:fe:7b:de:d8:77:10:a1:20:b4
root@kali:~# md5sum test.txt
795086fd74d848fe7bded87710a120b4  test.txt
root@kali:~# 
